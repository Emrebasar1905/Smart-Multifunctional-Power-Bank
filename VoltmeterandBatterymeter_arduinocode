/*Osmangazi University
Mehmet Emre Basar  151220202084
*/
// Voltmeter + Battery Meter
// To be connected to SCL = A5 pin, SDA = A4 pin
// I measured up to 20 volts
// resistors 100k, 10k
// There is a 10k resistor between gnd and A0, we enter A0 with 100k.
// gnd---10k-----A0-----100k--->
//  |-------------------------->
//
#include <LCD.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x3F, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);
// voltmetre değişkenleri
int analogInput = 0;    // analog 0 pini giriş 
float vout = 0.0;
float vin = 0.0;
float R1 = 100000.0; // 100Kohm direnç
float R2 = 10000.0; // 10Kohm direnç
int value2 = 0;

// battery meter variables
/*
 There is a 10-bit register in Arduino to convert this signal into a digital signal.
 This register takes the value 0.5 for 0 volt input and 1023 for 5 volt input.
 This increase is linear, that is, a change of 0.005 volts at the input increases the value of the register by one.
 For example, if our signal input is 3.3 volts, the value we will read is approximately 675.
 In short, the ADC returns a numerical value between 0 and 1023 by proportioning the signal between 0 and 5 volts.
 */
//  5/1024=0,0048...volt 
// 758 max - 3.7 V     
// 514 min - 2.5 V
float percentage = 0;
float value = 0;
int voltage = 0;

void setup(){
  Serial.begin(9600);
  lcd.begin(16, 2);
    lcd.setBacklightPin(3,POSITIVE);
  lcd.setBacklight(HIGH);
   pinMode(analogInput, INPUT);
}
void loop(){
  voltmeter();
  battery_meter();
}

void voltmeter()
{
   value2= analogRead(analogInput);
   vout = (value2 * 5.0) / 1024.0;
   vin = vout / (R2/(R1+R2));
   if (vin<0.09) {
   vin=0.0;
}
lcd.setCursor(0, 0);
lcd.print("volt: ");
lcd.print(vin);
delay(500);
  }

  void battery_meter()
  {
    // If the reading is higher than 5 volts, the occupancy will not be calculated
    if (vin>5.0){ 
      lcd.setCursor(0,1);
      lcd.print("               ");
   }
   else
   {
      voltage = analogRead(analogInput)*12;    // I got the number 12 by trying
   //Serial.println(gerilim);   //for output monitoring from the serial port screen
    voltage = 758;
  if(voltage <= 514)
    voltage = 514;
   percentage = voltage - min_value;
   value = ((100.00/244.00) * percentage);
   lcd.setCursor(0,1);
   lcd.print("Charge: %");
   lcd.print(value);
 
   }
   delay(500);
    }
  
